# This workflow build and push a Docker container to Google Artifact Registry
# and deploy it on Cloud Run when a commit is pushed to the "main"
# branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Cloud Run (run.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Cloud Run Developer (roles/run.developer)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources
#
# 3. Change the values in the "env" block to match your values.

name: Deploy to Cloud Run

on:
  push:
    branches:
      - main  # Trigger on push to main branch

env:
  PROJECT_ID: pk-aiproject
  REGION: us-central1
  SERVICE_NAME: helloservice1
  IMAGE_NAME: helloservice1-image
  REPO_NAME: helloservice-repo
  #BUCKET_NAME: helloservice-bucket-001
  BUCKET_NAME: "gs://pk-aiproject_cloudbuild/source"

jobs:
  deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Google Cloud CLI
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.CLOUDRUN_CICD_SA }}

      - name: Configure gcloud project
        run: |
          gcloud config set project $PROJECT_ID
          gcloud config set run/region $REGION


      - name: Debug current account
        run: gcloud auth list          

      - name: Enable required services
        run: |
          gcloud services enable run.googleapis.com \
                                artifactregistry.googleapis.com \
                                storage.googleapis.com

      - name: Create Artifact Registry (if not exists)
        run: |
          gcloud artifacts repositories create $REPO_NAME \
            --repository-format=docker \
            --location=$REGION || echo "Repo may already exist."

      - name: Build and Push Docker Image
        run: |
          gcloud builds submit services/helloservice1/src \
            --tag $REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME 

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image $REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME \
            --region $REGION \
            --allow-unauthenticated \
            --execution-environment=gen2 \
            --port=8081

      - name: Show Service URL
        run: |
          gcloud run services describe $SERVICE_NAME \
            --region=$REGION \
            --format="value(status.url)"

      
      # - name: Clean up old cloudbuild .tgz files from GCS
      #   run: |
      #     BUCKET_NAME="gs://pk-aiproject_cloudbuild/source"

      #     echo "Listing files in $BUCKET_NAME"
      #     gsutil ls -l $BUCKET_NAME/*.tgz | sort -k2 -r | tail -n +6 | awk '{print $NF}' | xargs -r gsutil rm      




